version: 3.9

# i defined a custom network for all services to communicate securely
networks:
  ssh-network:
    driver: bridge

services:
  ssh-logging: # python app for SSH logging
    build: ./ssh-logging # build from local but once done building i will remove this line
    image: mazivazvose/ssh-logging:latest
    networks:
      - ssh-network
    volumes:
      - ssh_data:/app/data # keeping SSH logs
    environment:
      DATABASE_URL:
    restart: unless-stopped
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    depends-on:
      db:
        condition: service_healthy # waiting until database is ready
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  web:
    image: nginx:alpine
    networks:
      - ssh-network
    ports:
      - "80:80"
    volumes:
      -
      - nginx_data:/app/data
    restart: always
    depends-on:
      ssh-logging:
        condition: service_healthy # waiting until ssh-logging is ready
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: postgres:12
    networks:
      - ssh-network
    volumes:
      - postgres_data:/var/lib/postgresql/data # named volume for persistent data storage
    restart: always
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  ssh_data:
  nginx_data:
  postgres_data:

secrets:
  postgres_user:
    file: ./postgres_user.txt
  postgres_password:
    file: ./postgres_password.txt
  postgres_db:
    file: ./postgres_db.txt

